openapi: 3.0.3
info:
  title: Fineract CN Amun
  version: 1.0.0
  description: An API module for credit risk assessment
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/v1/abtests:
    get:
      operationId: abtests_list
      description: ''
      tags:
      - abtests
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ABTest'
          description: ''
    post:
      operationId: abtests_create
      description: ''
      tags:
      - abtests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ABTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ABTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ABTest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTest'
          description: ''
  /api/v1/abtests/{id}:
    get:
      operationId: abtests_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ab test.
        required: true
      tags:
      - abtests
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTest'
          description: ''
    put:
      operationId: abtests_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ab test.
        required: true
      tags:
      - abtests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ABTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ABTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ABTest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTest'
          description: ''
    patch:
      operationId: abtests_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ab test.
        required: true
      tags:
      - abtests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedABTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedABTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedABTest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTest'
          description: ''
    delete:
      operationId: abtests_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ab test.
        required: true
      tags:
      - abtests
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/abtests/{id}/stop_ab_test:
    post:
      operationId: abtests_stop_ab_test_create
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ab test.
        required: true
      tags:
      - abtests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ABTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ABTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ABTest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTest'
          description: ''
  /api/v1/algorithms:
    get:
      operationId: algorithms_list
      description: ''
      tags:
      - algorithms
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Algorithm'
          description: ''
    post:
      operationId: algorithms_create
      description: ''
      tags:
      - algorithms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Algorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Algorithm'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
  /api/v1/algorithms/{id}:
    get:
      operationId: algorithms_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - algorithms
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
    put:
      operationId: algorithms_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - algorithms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Algorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Algorithm'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
    patch:
      operationId: algorithms_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - algorithms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlgorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlgorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlgorithm'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
    delete:
      operationId: algorithms_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this algorithm.
        required: true
      tags:
      - algorithms
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/algorithms/predict:
    post:
      operationId: algorithms_predict
      description: Predict credit risk for a loan
      parameters:
      - in: query
        name: status
        schema:
          type: string
        description: The status of the algorithm
        examples:
          Example1:
            value: production
            summary: Algorithm in production
      - in: query
        name: version
        schema:
          type: string
        description: Algorithm version
        required: true
      tags:
      - algorithms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input Model Data'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input Model Data'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input Model Data'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scoring successful'
          description: ''
  /api/v1/requests:
    get:
      operationId: requests_list
      description: ''
      tags:
      - requests
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request'
          description: ''
    post:
      operationId: requests_create
      description: ''
      tags:
      - requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Request'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
  /api/v1/requests/{id}:
    get:
      operationId: requests_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request.
        required: true
      tags:
      - requests
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    put:
      operationId: requests_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request.
        required: true
      tags:
      - requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Request'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    patch:
      operationId: requests_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request.
        required: true
      tags:
      - requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    delete:
      operationId: requests_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request.
        required: true
      tags:
      - requests
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    ABTest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 10000
        summary:
          type: string
          readOnly: true
        ended_at:
          type: string
          format: date-time
          readOnly: true
        algorithm_1:
          type: integer
        algorithm_2:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          maxLength: 128
      required:
      - algorithm_1
      - algorithm_2
      - created_at
      - created_by
      - ended_at
      - id
      - summary
      - title
    Algorithm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 1000
        code:
          type: string
          maxLength: 50000
        version:
          type: string
          maxLength: 128
        status:
          type: string
          maxLength: 128
        created_by:
          type: string
          maxLength: 128
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - created_at
      - created_by
      - description
      - id
      - name
      - status
      - version
    Input Model Data:
      type: object
      properties:
        age:
          type: string
        sex:
          type: string
          maxLength: 25
        job:
          type: string
          maxLength: 100
        housing:
          type: string
          maxLength: 100
        credit_amount:
          type: number
          format: float
        duration:
          type: integer
        purpose:
          type: string
          maxLength: 100
      required:
      - age
      - credit_amount
      - duration
      - housing
      - job
      - purpose
      - sex
    PatchedABTest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 10000
        summary:
          type: string
          readOnly: true
        ended_at:
          type: string
          format: date-time
          readOnly: true
        algorithm_1:
          type: integer
        algorithm_2:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          maxLength: 128
    PatchedAlgorithm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 1000
        code:
          type: string
          maxLength: 50000
        version:
          type: string
          maxLength: 128
        status:
          type: string
          maxLength: 128
        created_by:
          type: string
          maxLength: 128
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        input_data:
          type: string
          readOnly: true
        full_response:
          type: string
          readOnly: true
        response:
          type: string
          readOnly: true
        feedback:
          type: string
          nullable: true
          maxLength: 10000
        algorithm:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    Request:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        input_data:
          type: string
          readOnly: true
        full_response:
          type: string
          readOnly: true
        response:
          type: string
          readOnly: true
        feedback:
          type: string
          nullable: true
          maxLength: 10000
        algorithm:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - algorithm
      - created_at
      - full_response
      - id
      - input_data
      - response
    Scoring successful:
      type: object
      properties:
        probability:
          type: number
          format: float
        label:
          type: string
          maxLength: 100
        status:
          type: string
          maxLength: 100
      required:
      - label
      - probability
      - status
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
servers:
- url: http://127.0.0.1:8000
  description: server on localhost
